
body, html {
    height: 100%;
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
    background-color: #A5ADB6;
}

div.content {
  margin: 0 auto 0 auto;
  width: 640px;
}

/* unvisited link */
a:link {
  color: black;
}

a:visited {
  color: black;
}

a:hover {
  color: black;
  background-color: #CCC;
}

a:active {
  color: black;
  background-color: #EEE;
  text-decoration: none;
}
.tags {
    font: 12px/1.5 'PT Sans', serif;
    list-style: none;
    margin: 0;
    overflow: hidden;
    padding: 0;
  }

  .tags li {
    float: left;
  }

  .tag {
    background: #eee;
    border-radius: 3px 0 0 3px;
    color: #999;
    display: inline-block;
    height: 26px;
    line-height: 26px;
    padding: 0 20px 0 23px;
    position: relative;
    margin: 0 10px 10px 0;
    text-decoration: none;
    transition: color 0.2s;
  }

  .tag::before {
    background: #fff;
    border-radius: 10px;
    box-shadow: inset 0 1px rgba(0, 0, 0, 0.25);
    content: '';
    height: 6px;
    left: 10px;
    position: absolute;
    width: 6px;
    top: 10px;
  }

  .tag::after {
    background: #A5ADB6;
    border-bottom: 13px solid transparent;
    border-left: 10px solid #eee;
    border-top: 13px solid transparent;
    content: '';
    position: absolute;
    right: 0;
    top: 0;
  }

  .tag:hover {
    background-color: crimson;
    color: white;
  }

  .tag:hover::after {
     border-left-color: crimson;
  }

  a.taglink:hover {
    color: black;
    background-color: #A5ADB6;
  }
  
  a.taglink:active {
    color: black;
    background-color: #A5ADB6;
  }
.hero-image {
    /* Fixed height */
    height: 200px;
  
    /* Position and center the image to scale nicely on all screens */
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    position: relative;
  }


/**
Range of bright contrasting colors that go well together.
*/
.color0 {
    /* blank/empty space */
    background-color: hsl(216, 27%, 20%);
}

.color1 {
    background-color: hsl(216, 78%, 60%);
}

.color2 {
    background-color: hsl(20, 78%, 60%);
}

.color3 {
    background-color: hsl(131, 53%, 48%);
}

.color4 {
    background-color: hsl(263, 72%, 65%);
}

.color5 {
    background-color: hsl(68, 78%, 60%);
}

.color6 {
    background-color: hsl(8, 78%, 60%);
}

.color7 {
    background-color: hsl(178, 78%, 60%);
}

.color8 {
    background-color: hsl(0, 44%, 72%);
}

/*
Range of colors with semantic meaning.
these indicate good, bad, etc.
*/
.color100 {
    background-color: #360c31;
}

.color101 {
    background-color: #d62828;
}

.color102 {
    background-color: #f77f00;
}

.color103 {
    background-color: hsl(40, 95%, 63%);
}

.color104 {
    background-color: #6a994e;
}

.color105 {
    background-color: hsl(98, 100%, 42%);
}

.color106 {
    background-color: #666666;
}

.color107 {
    background-color: #d2d2d2;
}

/* Gradient Colors*/
.color200 {
    background-color: hsl(226, 80%, 0%);
}

.color201 {
    background-color: hsl(226, 80%, 9%);
}

.color202 {
    background-color: hsl(226, 80%, 17%);
}

.color203 {
    background-color: hsl(226, 80%, 25%);
}

.color204 {
    background-color: hsl(226, 80%, 34%);
}

.color205 {
    background-color: hsl(226, 80%, 42%);
}

.color206 {
    background-color: hsl(226, 80%, 50%);
}

.color207 {
    background-color: hsl(226, 80%, 58%);
}

.color208 {
    background-color: hsl(226, 80%, 66%);
}

.color209 {
    background-color: hsl(226, 80%, 75%);
}

.color210 {
    background-color: hsl(226, 80%, 83%);
}

.color211 {
    background-color: hsl(226, 80%, 91%);
}

.color212 {
    background-color: hsl(226, 80%, 100%);
}

/* Checkerboard / Alternating Colors*/
.color301 {
    background-color: #EDB458;
}

.color302 {
    background-color: #b97832;
}


/* https://codepen.io/simon-sant-cassia/pen/QWGdOgV */

.tabs-container {
  display: flex;
  flex-wrap: wrap;
}

.tabs-container > input[type=radio] {
  display: none;
}

.tabs-container > input[type=radio]:checked + .tab-label {
  background-color: darkslategray;
}

.tabs-container > input[type=radio]:first-child + .tab-label {
  border-radius: 50px 0 0 50px;
}

.tabs-container > input[type=radio]:last-of-type + .tab-label {
  border-radius: 0 50px 50px 0;
}

.tabs-container > input[type=radio]:not(:checked) + .tab-label + .tab-content {
  display: none;
}

.tabs-container .tab-label {
    padding: 5px 15px;
    color: white;
    background-color: slategray;
}

.tabs-container .tab-content {
  order: 99;
  width: 100%;
  display: block;
}
* {
    box-sizing: border-box;
}

.map {
    margin: 20px;
    user-select: none;
    overflow: hidden;
}

.map.small {
    width: 200px;
}

.map.large {
    width: 600px;
}

div.caption {
   background-color: lightgrey;
   padding: 3px; 
}

.actualMap {
    display: grid;
    padding: 15px;
    grid-auto-rows: 1fr; /* introduces hairline gaps between rows, resolves others */
    grid-gap: 0px;
    background-color: #eee;
}

.map-cell {
    display: flex;
    height: 0;
    padding-bottom: 100%;
    position: relative;
}

.map-cell .cell-content {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: space-around;    
}

/* Overall */
* {
    box-sizing: border-box;
  }
  
  body {
    font-family: sans-serif;
    margin: 20px;
  }
  
  /* 3D Scene */
  .is_spinning {
    animation: spinCube 40s infinite linear;
  }
  
  @keyframes spinCube {
    0% {
      transform: rotateY(0deg);
    }
    100% {
      transform: rotateY(-360deg);
    }
  }
  
  .referenceCopy {
    display:none;
  }
  
  div.scene {
    float: left;
    width: 200px;
    height: 200px;
    border: 1px solid #ccc;
    margin: 20px;
    perspective: 400px;
    user-select: none;
  }
  
  /*
  Zooms to fit the screen reasonably well
  Adjusts viewing angle too.
  */
  .zoomer {
    position: relative;
    transform-style: preserve-3d;
    transform: translateZ(-1000px) rotateX(-30deg);
  }
  
  /* defines the rotation */
  .spinner {
    position: relative;
    transform-style: preserve-3d;
  }
  
  /* this is centered around axis of rotation */
  .polycube {
    /*transform: translateX(-200px) translateZ(-200px);*/
    position: relative;
    transform-style: preserve-3d;
  }
  
  .cube {
    width: 200px;
    height: 200px;
    position: absolute;
    transform-style: preserve-3d;
  }
  
  .cube.show-front {
    transform: translateZ(-100px) rotateY(0deg);
  }
  .cube.show-right {
    transform: translateZ(-100px) rotateY(-90deg);
  }
  .cube.show-back {
    transform: translateZ(-100px) rotateY(-180deg);
  }
  .cube.show-left {
    transform: translateZ(-100px) rotateY(90deg);
  }
  .cube.show-top {
    transform: translateZ(-100px) rotateX(-90deg);
  }
  .cube.show-bottom {
    transform: translateZ(-100px) rotateX(90deg);
  }
  
  .cube__face {
    position: absolute;
    width: 200px;
    height: 200px;
    border: 5px solid black;
    line-height: 200px;
    font-size: 40px;
    font-weight: bold;
    color: hsla(0, 100%, 50%, 0);
    text-align: center;
  }
  
  .cube__face--front {
    background: hsla(0, 100%, 45%, 0.8);
  }
  .cube__face--right {
    background: hsla(240, 100%, 50%, 0.8);
  }
  .cube__face--back {
    background: hsla(120, 100%, 40%, 0.8);
  }
  .cube__face--left {
    background: hsla(240, 100%, 50%, 0.8);
  }
  .cube__face--top {
    background: hsla(60, 100%, 50%, 0.8);
  }
  .cube__face--bottom {
    background: hsla(60, 100%, 50%, 0.8);
  }
  
  .cube__face--front {
    transform: rotateY(0deg) translateZ(100px);
  }
  .cube__face--right {
    transform: rotateY(90deg) translateZ(100px);
  }
  .cube__face--back {
    transform: rotateY(180deg) translateZ(100px);
  }
  .cube__face--left {
    transform: rotateY(-90deg) translateZ(100px);
  }
  .cube__face--top {
    transform: rotateX(90deg) translateZ(100px);
  }
  .cube__face--bottom {
    transform: rotateX(-90deg) translateZ(100px);
  }
  
  /* Elevation Map */
  .map {
    margin: 20px;
    padding: 5px;
    user-select: none;
    border: 1px solid #ccc;
  }
  
  .map .but {
    float: left;
    width: 62px;
    height: 62px;
    line-height: 62px;
    text-align: center;
  }
  
  .map .but.active {
    background-color: #DDD;
    border-top: 3px solid #0D0;
    border-bottom: 3px solid #F00;
    border-left: 3px solid #00F;
    border-right: 3px solid #00F;
  }
  
  .map .but:hover {
    background-color: #FFF;
    background: #94ff9b;
  }
  
  .map .but.active:hover {
    background-color: #FFF;
    background: linear-gradient(45deg, #ff9d9b 50%, #94ff9b 50%);
  }
  
  /* Text Area */
  .points {
    float: left;
    width: 200px;
    height: 200px;
    margin: 20px;
  }
  
  .points textarea {
    width: 200px;
    height: 200px;
    border: 1px solid #ccc;
    resize: none;
  }
  
  .compact {
    float: left;
    width: 200px;
    height: 200px;
    margin: 20px;
  }
  
  .compact textarea {
    width: 200px;
    height: 200px;
    border: 1px solid #ccc;
    resize: none;
  }
.constraintsTemplate {
    border: #d579d8 solid 4px; padding: 15px;
}

.constraintsGenerated {
    border: #4467da solid 4px; padding: 15px;
}


